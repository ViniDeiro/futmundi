# Generated by Django 4.2.17 on 2025-02-19 04:36

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administrativo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_root', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'db_table': 'administrators',
            },
        ),
        migrations.CreateModel(
            name='Championship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('season', models.CharField(blank=True, max_length=50, null=True)),
                ('points', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Campeonato',
                'verbose_name_plural': 'Campeonatos',
                'db_table': 'championships',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClassicLeague',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'classic_leagues',
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Continente',
                'verbose_name_plural': 'Continentes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administrativo.continent')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FutcoinPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('amount', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'futcoin_packages',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'parameters',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'plans',
            },
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('estadual', 'Estadual'), ('nacional', 'Nacional'), ('continental', 'Continental'), ('mundial', 'Mundial')], default='estadual', max_length=20)),
                ('boost', models.IntegerField(default=0)),
                ('futcoins', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Âmbito',
                'verbose_name_plural': 'Âmbitos',
                'db_table': 'scopes',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administrativo.country')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'ordering': ['name'],
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_of_stages', models.PositiveIntegerField(default=1)),
                ('championships', models.ManyToManyField(blank=True, related_name='templates', to='administrativo.championship')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
                'db_table': 'templates',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('version', models.CharField(max_length=10)),
                ('active_from', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'terms',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('futcoins', models.IntegerField(default=0)),
                ('current_plan', models.CharField(choices=[('common', 'Common'), ('star', 'Star')], default='common', max_length=20)),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('star_date', models.DateTimeField(blank=True, null=True)),
                ('current_period', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semiannual', 'Semiannual'), ('annual', 'Annual')], default='monthly', max_length=20)),
                ('period_start', models.DateTimeField(blank=True, null=True)),
                ('period_end', models.DateTimeField(blank=True, null=True)),
                ('period_renewals', models.IntegerField(default=0)),
                ('facebook_linked', models.BooleanField(default=False)),
                ('google_linked', models.BooleanField(default=False)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('plan_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('packages_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_star', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='TemplateStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rounds', models.PositiveIntegerField()),
                ('matches_per_round', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='administrativo.template')),
            ],
            options={
                'verbose_name': 'Fase do Template',
                'verbose_name_plural': 'Fases do Template',
                'db_table': 'template_stages',
                'ordering': ['order'],
                'unique_together': {('template', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('is_national_team', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('continent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='administrativo.continent')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='administrativo.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='administrativo.state')),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Times',
                'db_table': 'teams',
                'ordering': ['name'],
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administrativo.team')),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administrativo.user')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='ChampionshipStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('championship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='administrativo.championship')),
                ('template_stage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administrativo.templatestage')),
            ],
            options={
                'verbose_name': 'Fase do Campeonato',
                'verbose_name_plural': 'Fases do Campeonato',
                'db_table': 'championship_stages',
                'ordering': ['order'],
                'unique_together': {('championship', 'order')},
            },
        ),
        migrations.CreateModel(
            name='ChampionshipRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('championship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='administrativo.championship')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='administrativo.championshipstage')),
            ],
            options={
                'verbose_name': 'Rodada do Campeonato',
                'verbose_name_plural': 'Rodadas do Campeonato',
                'db_table': 'championship_rounds',
                'ordering': ['number'],
                'unique_together': {('championship', 'stage', 'number')},
            },
        ),
        migrations.CreateModel(
            name='ChampionshipMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('match_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='administrativo.team')),
                ('championship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='administrativo.championship')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='administrativo.team')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='administrativo.championshipround')),
            ],
            options={
                'verbose_name': 'Partida do Campeonato',
                'verbose_name_plural': 'Partidas do Campeonato',
                'db_table': 'championship_matches',
                'ordering': ['match_date'],
            },
        ),
        migrations.AddField(
            model_name='championship',
            name='continent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='administrativo.continent'),
        ),
        migrations.AddField(
            model_name='championship',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='administrativo.country'),
        ),
        migrations.AddField(
            model_name='championship',
            name='current_round',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='administrativo.championshipround'),
        ),
        migrations.AddField(
            model_name='championship',
            name='current_stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='administrativo.championshipstage'),
        ),
        migrations.AddField(
            model_name='championship',
            name='scope',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='championships', to='administrativo.scope'),
        ),
        migrations.AddField(
            model_name='championship',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='administrativo.state'),
        ),
        migrations.AddField(
            model_name='championship',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='team_championships', to='administrativo.team'),
        ),
        migrations.AddField(
            model_name='championship',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='template_championships', to='administrativo.template'),
        ),
        migrations.CreateModel(
            name='ScopeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('leverage', 'Alavancagem'), ('insurance', 'Seguro')], max_length=20)),
                ('level', models.IntegerField()),
                ('points', models.IntegerField(default=0)),
                ('futcoins', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scope', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='administrativo.scope')),
            ],
            options={
                'verbose_name': 'Nível de Âmbito',
                'verbose_name_plural': 'Níveis de Âmbito',
                'db_table': 'scope_levels',
                'unique_together': {('scope', 'type', 'level')},
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(choices=[('victory', 'Vitória'), ('draw', 'Empate')], max_length=20)),
                ('boost_bonus', models.IntegerField(default=0)),
                ('leverage_expenses', models.IntegerField(default=0)),
                ('insurance_expenses', models.IntegerField(default=0)),
                ('total_expenses', models.IntegerField(default=0)),
                ('remaining_credits', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('hits', models.IntegerField(default=0)),
                ('leverage', models.IntegerField(default=0)),
                ('insurance', models.IntegerField(default=0)),
                ('bonus', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('hit', 'Acerto'), ('miss', 'Erro')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='administrativo.championshipmatch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='administrativo.user')),
            ],
            options={
                'verbose_name': 'Palpite',
                'verbose_name_plural': 'Palpites',
                'db_table': 'predictions',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'match')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='championship',
            unique_together={('name', 'season')},
        ),
    ]
