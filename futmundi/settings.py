"""
Django settings for futmundi project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-*!otp&mbvfnis!c5s=jl0s)qp7r%vf$04=*3x(qg60ef6wsw_p"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    # Third party apps
    "rest_framework",
    "corsheaders",
    "rest_framework_simplejwt",  # Adicionado para autenticação JWT
    "drf_yasg",  # Adicionado para documentação Swagger
    
    # Apps locais
    "administrativo.apps.AdministrativoConfig",
]

MIDDLEWARE = [
    "administrativo.debug_middleware.DebugMiddleware",  # Middleware de depuração para identificar problema com planos
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'administrativo.middleware.ApiDebugMiddleware',
]

ROOT_URLCONF = "futmundi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "futmundi.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'futmundi_db',
        'USER': 'futmundi_user',
        'PASSWORD': 'Vdl@2209',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Configuração do modelo de usuário personalizado
AUTH_USER_MODEL = 'administrativo.User'

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'administrativo/static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configurações adicionais para arquivos estáticos
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}

# Swagger settings
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False,
}

# JWT Settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # Token de acesso expira em 60 minutos
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),    # Token de refresh expira em 30 dias
    'ROTATE_REFRESH_TOKENS': True,                   # Gera novos refresh tokens quando o refresh é usado
    'BLACKLIST_AFTER_ROTATION': False,               # Não blacklistar tokens após rotação (simplificação)
    'ALGORITHM': 'HS256',                            # Algoritmo de assinatura
    'SIGNING_KEY': SECRET_KEY,                       # Chave de assinatura
    'AUTH_HEADER_TYPES': ('Bearer',),                # Tipo de header de autorização
    'USER_ID_FIELD': 'id',                           # Campo de ID do usuário
    'USER_ID_CLAIM': 'user_id',                      # Claim para o ID do usuário
}

# Session settings
SESSION_COOKIE_AGE = 60 * 60 * 24 * 30  # 30 dias em segundos
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expira ao fechar o navegador - ajustado para resolver problema de autenticação
SESSION_SAVE_EVERY_REQUEST = True  # Atualiza o cookie a cada requisição
SESSION_COOKIE_SECURE = False  # Permite cookies em conexões não-HTTPS em desenvolvimento
SESSION_COOKIE_HTTPONLY = True  # Previne acesso via JavaScript por segurança
SESSION_COOKIE_SAMESITE = 'Lax'  # Configuração de segurança para cookies

# Login settings
LOGIN_URL = 'administrativo:login'
LOGIN_REDIRECT_URL = 'administrativo:index'

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# CORS settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React frontend
    "http://127.0.0.1:3000",
    "http://localhost:19000",  # Expo em desenvolvimento
    "http://localhost:19001",
    "http://localhost:19002",
    "http://localhost:19006",  # Expo web
    "exp://localhost:19000",   # Expo em dispositivos
    "exp://127.0.0.1:19000"
]

CORS_ALLOW_ALL_ORIGINS = True  # Para desenvolvimento - remover em produção
CORS_ALLOW_CREDENTIALS = True

# Configurações adicionais para CORS
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]

# Upload settings
DATA_UPLOAD_MAX_NUMBER_FILES = 1000  # Aumenta o limite para 1000 arquivos

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'administrativo': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
